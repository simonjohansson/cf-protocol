// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/simonjohansson/cf-protocol/helpers (interfaces: ManifestReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	manifest "code.cloudfoundry.org/cli/util/manifest"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManifestReader is a mock of ManifestReader interface
type MockManifestReader struct {
	ctrl     *gomock.Controller
	recorder *MockManifestReaderMockRecorder
}

// MockManifestReaderMockRecorder is the mock recorder for MockManifestReader
type MockManifestReaderMockRecorder struct {
	mock *MockManifestReader
}

// NewMockManifestReader creates a new mock instance
func NewMockManifestReader(ctrl *gomock.Controller) *MockManifestReader {
	mock := &MockManifestReader{ctrl: ctrl}
	mock.recorder = &MockManifestReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManifestReader) EXPECT() *MockManifestReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockManifestReader) Read(arg0 string) (manifest.Application, error) {
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(manifest.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockManifestReaderMockRecorder) Read(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockManifestReader)(nil).Read), arg0)
}
